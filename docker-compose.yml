version: '3.7'

networks:
    back:
        driver: bridge
    reverse-proxy:
        external: true

services:
    srvc_mariadb:
        container_name: ${PROJECT_NAME}_mariadb
        image: mariadb:${MARIADB_VERSION}
        restart: always
        networks:
            - back
        environment:
            - MARIADB_ROOT_PASSWORD=${DATABASE_PASSWORD}
            - MARIADB_DATABASE=${DATABASE_NAME}
            - MARIADB_USER=${DATABASE_USER}
        volumes:
            - database_data:/var/lib/mysql:rw
            # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
            # - ./docker/db/data:/var/lib/mysql/data:rw
        healthcheck:
          test: ["CMD-SHELL", "exit | mysql -u${DATABASE_USER} -p${DATABASE_PASSWORD}" ]
          interval: 10s
          timeout: 5s
          retries: 5

    srvc_php:
        container_name: ${PROJECT_NAME}_php
        build:
            context: ./docker/php
            args:
                - IMAGE=${PHP_IMAGE}
                - NODE_VERSION=${NODE_VERSION}
                - DATABASE_DRIVER=${DATABASE_DRIVER}
                - UID=${UID}
                - GID=${GID}
        depends_on:
            srvc_mariadb:
                condition: service_healthy
            srvc_rabbitmq:
                condition: service_healthy
        networks:
            - back
            - reverse-proxy
        env_file:
            - ./.env
        volumes:
            - .:/var/www/html
            #- /var/www/html/vendor/
            #- /var/www/html/node_modules/

    srvc_nginx:
        container_name: ${PROJECT_NAME}_nginx
        image: nginx:latest
        depends_on:
            - srvc_php
        networks:
            - back
            - reverse-proxy
        labels:
            - traefik.enable=true
            - traefik.docker.network=reverse-proxy
            - traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_NAME}.${BASE_DOMAIN}`)
            - traefik.http.routers.${PROJECT_NAME}_nginx.middlewares=redirecthttps@file
        working_dir: /var/www/html
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:cached
            - .:/var/www/html
            
    srvc_mail:
        container_name: ${PROJECT_NAME}_mail
        image: djfarrelly/maildev
        command: bin/maildev --web 80 --smtp 25 --hide-extensions STARTTLS
        networks:
            - back
            - reverse-proxy
        labels:
            - traefik.enable=true
            - traefik.docker.network=reverse-proxy
            - traefik.http.routers.${PROJECT_NAME}_mail.rule=Host(`mail.${PROJECT_NAME}.${BASE_DOMAIN}`)
            - traefik.http.routers.${PROJECT_NAME}_mail.middlewares=redirecthttps@file
            - traefik.http.services.${PROJECT_NAME}_mail.loadbalancer.server.port=80

    srvc_pma:
        container_name: ${PROJECT_NAME}_pma
        image: phpmyadmin
        environment:
            - PMA_HOST=${DATABASE_HOST}
            - PMA_USER=${DATABASE_USER}
            - PMA_PASSWORD=${DATABASE_PASSWORD}
        networks:
            - back
            - reverse-proxy
        labels:
            - traefik.enable=true
            - traefik.docker.network=reverse-proxy
            - traefik.http.routers.${PROJECT_NAME}_pma.rule=Host(`pma.${PROJECT_NAME}.${BASE_DOMAIN}`)
            - traefik.http.routers.${PROJECT_NAME}_pma.middlewares=redirecthttps@file

    srvc_rabbitmq:
        container_name: ${PROJECT_NAME}_rabbitmq
        image: rabbitmq:3.12-management-alpine
        environment:
            - RABBITMQ_DEFAULT_USER=${BACKEND_RABBITMQ_USERNAME}
            - RABBITMQ_DEFAULT_PASS=${BACKEND_RABBITMQ_PASSWORD}
        networks:
            - back
            - reverse-proxy
        labels:
            - traefik.enable=true
            - traefik.docker.network=reverse-proxy
            - traefik.http.routers.${PROJECT_NAME}_rmq.rule=Host(`rmq.${PROJECT_NAME}.${BASE_DOMAIN}`)
            - traefik.http.routers.${PROJECT_NAME}_rmq.middlewares=redirecthttps@file
            - traefik.http.services.${PROJECT_NAME}_rmq.loadbalancer.server.port=15672
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 10s
            timeout: 5s
            retries: 3

volumes:
    rabbitmq_data:
        name: vol-rabbitmq-data
    database_data:
        name: vol-api-data
